pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = "localhost:5000"
        IMAGE_NAME = 'testjenkins'
        COMMIT_HASH = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
        IMAGE_TAG = "${env.BUILD_NUMBER}-${COMMIT_HASH}"
        IMAGE_FULL_NAME = "${IMAGE_NAME}:${IMAGE_TAG}"
        PROJECT_NAME = "testjenkins"
        PROJECT_PATH = ""
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_REGISTRY}/${IMAGE_FULL_NAME}", "-f deploy/Dockerfile .")
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry("http://${DOCKER_REGISTRY}") {
                        docker.image("${DOCKER_REGISTRY}/${IMAGE_FULL_NAME}").push()
                    }
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([string(credentialsId: 'TESTJENKINS_MATER_PASS', variable: 'MASTER_PASS')]) {

                    sh '''
                    echo "La contraseña desenmascarada es: $MASTER_PASS"
                    '''
                    sh '''
                    echo "La contraseña desenmascarada es:"
                    echo "$MY_SECRET" > password.txt
                    '''
                    sh '''
                    cat password.txt
                    '''

                    // Ejecuta el script .sh con la credencial en el entorno
                    sh '''
                        #!/bin/bash
                        chmod +x ./deploy/scripts/deploy-01-deploy.sh
                        ./deploy/scripts/deploy-01-deploy.sh
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Deploy completed successfully!'
        }
        failure {
            echo 'Deploy failed!'
        }
    }
}
